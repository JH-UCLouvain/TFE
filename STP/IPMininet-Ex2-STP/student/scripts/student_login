#!/bin/python3
# Author : Jeremy Holodiline

from ipmininet.iptopo import IPTopo
from ipmininet.ipnet import IPNet
from ipmininet.cli import IPCLI

import random

import sys
sys.path.insert(1, '/course/common/student/')
from ipmininet_exercices import IPMininet_Exercice
ex = IPMininet_Exercice(6)

class MyTopology(IPTopo):

    def build(self, *args, **kwargs):

        s_var_names = ["a", "b", "c", "d", "e", "f"]
        s_var = {}
        s_num = list(range(51,100))
        s_prio = list(range(1,50))
        for var_name in s_var_names:
            rand_s_num = random.choice(s_num)
            rand_s_prio = random.choice(s_prio)
            s_var[var_name] = self.addSwitch(f"s{rand_s_num}", prio=rand_s_prio)
            s_num.remove(rand_s_num)
            s_prio.remove(rand_s_prio)

        ex.create_link_switch(self, s_var["a"], s_var["b"])
        ex.create_link_switch(self, s_var["a"], s_var["c"])
        ex.create_link_switch(self, s_var["b"], s_var["c"])
        ex.create_link_switch(self, s_var["b"], s_var["e"])
        ex.create_link_switch(self, s_var["c"], s_var["e"])
        ex.create_link_switch(self, s_var["c"], s_var["d"])
        ex.create_link_switch(self, s_var["d"], s_var["f"])
        ex.create_link_switch(self, s_var["e"], s_var["f"])

        super(MyTopology, self).build(*args, **kwargs)

def answer(cli, args):
    ex.student_answer = args

net = IPNet(topo=MyTopology())

try:
    net.start()

    IPCLI.do_answer = answer

    IPCLI(net)

    root_priority = "51"
    for s in net.switches:
        data = net[s.name].cmd(f"ip -d link show {s.name}").split()
        for i in range(len(data)):
            if data[i] == "priority" and int(data[i+1]) < int(root_priority):
                ex.correct_answer = s.name
                root_priority = data[i+1]
                break
    ex.compare_answer_test()
    ex.send_feedback()

except Exception as e:
    ex.send_feedback(0, "crash", f"Error from the ipmininet script : {e}")

finally:
    net.stop()