#!/bin/python3
# Author : Jeremy Holodiline

from ipmininet.iptopo import IPTopo
from ipmininet.ipnet import IPNet
from ipmininet.cli import IPCLI
from ipmininet.router.config import RouterConfig

import sys
sys.path.insert(1, '/course/common/student/')
from ipmininet_exercices import IPMininet_Exercice
ex = IPMininet_Exercice(6)

class MyTopology(IPTopo):

    def build(self, *args, **kwargs):

        h1 = self.addHost("h1", defaultRoute=None)
        h2 = self.addHost("h2", defaultRoute=None)
        h3 = self.addHost("h3", defaultRoute=None)
        h4 = self.addHost("h4", defaultRoute=None)
        r1 = self.addRouter("r1", config=RouterConfig)
        r2 = self.addRouter("r2", config=RouterConfig)
        r3 = self.addRouter("r3", config=RouterConfig)
        r4 = self.addRouter("r4", config=RouterConfig)

        self.addLink(h1, r1, intfName1=ex.generate_intf_name("h1-r1"), intfName2=ex.generate_intf_name("r1-h1"))
        self.addLink(h2, r2, intfName1=ex.generate_intf_name("h2-r2"), intfName2=ex.generate_intf_name("r2-h2"))
        self.addLink(h3, r3, intfName1=ex.generate_intf_name("h3-r3"), intfName2=ex.generate_intf_name("r3-h3"))
        self.addLink(h4, r4, intfName1=ex.generate_intf_name("h4-r4"), intfName2=ex.generate_intf_name("r4-h4"))
        self.addLink(r1, r2, intfName1=ex.generate_intf_name("r1-r2"), intfName2=ex.generate_intf_name("r2-r1"))
        self.addLink(r2, r3, intfName1=ex.generate_intf_name("r2-r3"), intfName2=ex.generate_intf_name("r3-r2"))
        self.addLink(r3, r4, intfName1=ex.generate_intf_name("r3-r4"), intfName2=ex.generate_intf_name("r4-r3"))
        self.addLink(r1, r4, intfName1=ex.generate_intf_name("r1-r4"), intfName2=ex.generate_intf_name("r4-r1"))

        super(MyTopology, self).build(*args, **kwargs)

net = IPNet(topo=MyTopology(), allocate_IPs=False)

try:
    net.start()

    IPCLI(net)

    hosts = ("h1-r1", "h2-r2", "h3-r3", "h4-r4")

    hosts_have_addr = True
    for host in hosts:
        ex.n_tests += 1
        host_name = host.split("-")[0]
        addr = ex.get_address(host_name, host, net)
        ex.intf_addr[host] = addr.split("/")[0]
        if addr == "":
            hosts_have_addr = False
            ex.feedback += f"{host_name} has no IPv{ex.ip_version} address configured\n"
        else : ex.n_success_tests += 1

    if hosts_have_addr:
        for h_a in hosts:
            for h_b in hosts:
                h_a_name = h_a.split("-")[0]
                h_b_name = h_b.split("-")[0]
                if h_a_name != h_b_name:
                    ex.ping_test(h_a_name, h_b, net)

    ex.send_feedback()

except Exception as e:
    ex.send_feedback(0, "crash", f"Error from the ipmininet script : {e}")

finally:
    net.stop()