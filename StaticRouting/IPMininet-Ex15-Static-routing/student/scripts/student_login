#!/bin/python3
# Author : Jeremy Holodiline

from ipmininet.iptopo import IPTopo
from ipmininet.ipnet import IPNet
from ipmininet.cli import IPCLI
from ipmininet.router.config import RouterConfig

import sys
sys.path.insert(1, '/course/common/student/')
from ipmininet_exercices import IPMininet_Exercice
ex = IPMininet_Exercice(6)

class MyTopology(IPTopo):

    def build(self, *args, **kwargs):

        h1 = self.addHost("h1", defaultRoute=None)
        h2 = self.addHost("h2", defaultRoute=None)
        h3 = self.addHost("h3", defaultRoute=None)
        h4 = self.addHost("h4", defaultRoute=None)
        r1 = self.addRouter("r1", config=RouterConfig)
        r2 = self.addRouter("r2", config=RouterConfig)
        r3 = self.addRouter("r3", config=RouterConfig)
        r4 = self.addRouter("r4", config=RouterConfig)
        r5 = self.addRouter("r5", config=RouterConfig)
        r6 = self.addRouter("r6", config=RouterConfig)
        r7 = self.addRouter("r7", config=RouterConfig)
        r8 = self.addRouter("r8", config=RouterConfig)
        r9 = self.addRouter("r9", config=RouterConfig)

        ex.create_link(self, h1, r1, 64)
        ex.create_link(self, h2, r2, 64)
        ex.create_link(self, h3, r3, 64)
        ex.create_link(self, h4, r4, 64)
        ex.create_link(self, r1, r2, 64)
        ex.create_link(self, r2, r3, 64)
        ex.create_link(self, r4, r5, 64)
        ex.create_link(self, r5, r6, 64)
        ex.create_link(self, r7, r8, 64)
        ex.create_link(self, r8, r9, 64)
        ex.create_link(self, r1, r7, 64)
        ex.create_link(self, r4, r7, 64)
        ex.create_link(self, r2, r8, 64)
        ex.create_link(self, r5, r8, 64)
        ex.create_link(self, r3, r9, 64)
        ex.create_link(self, r6, r9, 64)

        super(MyTopology, self).build(*args, **kwargs)

net = IPNet(topo=MyTopology(), allocate_IPs=False)

try:
    net.start()
    net["h1"].cmd("ip -6 route add default via " + ex.intf_addr["r1-h1"])
    net["h2"].cmd("ip -6 route add default via " + ex.intf_addr["r2-h2"])
    net["h3"].cmd("ip -6 route add default via " + ex.intf_addr["r3-h3"])
    net["h4"].cmd("ip -6 route add default via " + ex.intf_addr["r4-h4"])
    net["r1"].cmd("ip -6 route add " + ex.intf_addr["h4-r4"] + "/64 via " + ex.intf_addr["r7-r1"])
    net["r7"].cmd("ip -6 route add " + ex.intf_addr["h4-r4"] + "/64 via " + ex.intf_addr["r4-r7"])
    net["r2"].cmd("ip -6 route add " + ex.intf_addr["h1-r1"] + "/64 via " + ex.intf_addr["r1-r2"])
    net["r1"].cmd("ip -6 route add " + ex.intf_addr["h2-r2"] + "/64 via " + ex.intf_addr["r2-r1"])
    net["r2"].cmd("ip -6 route add " + ex.intf_addr["h3-r3"] + "/64 via " + ex.intf_addr["r3-r2"])
    net["r3"].cmd("ip -6 route add " + ex.intf_addr["h2-r2"] + "/64 via " + ex.intf_addr["r2-r3"])
    net["r3"].cmd("ip -6 route add " + ex.intf_addr["h1-r1"] + "/64 via " + ex.intf_addr["r2-r3"])
    net["r1"].cmd("ip -6 route add " + ex.intf_addr["h3-r3"] + "/64 via " + ex.intf_addr["r2-r1"])
    net["r3"].cmd("ip -6 route add " + ex.intf_addr["h4-r4"] + "/64 via " + ex.intf_addr["r9-r3"])
    net["r9"].cmd("ip -6 route add " + ex.intf_addr["h4-r4"] + "/64 via " + ex.intf_addr["r8-r9"])
    net["r8"].cmd("ip -6 route add " + ex.intf_addr["h4-r4"] + "/64 via " + ex.intf_addr["r5-r8"])
    net["r5"].cmd("ip -6 route add " + ex.intf_addr["h4-r4"] + "/64 via " + ex.intf_addr["r6-r5"])
    net["r6"].cmd("ip -6 route add " + ex.intf_addr["h4-r4"] + "/64 via " + ex.intf_addr["r9-r6"])

    IPCLI(net)

    ex.ping_test("h1", "h4-r4", net)
    ex.ping_test("h2", "h4-r4", net)
    ex.ping_test("h3", "h4-r4", net)
    ex.ping_test("h4", "h1-r1", net)
    ex.ping_test("h4", "h2-r2", net)
    ex.ping_test("h4", "h3-r3", net)
    ex.send_feedback()

except Exception as e:
    ex.send_feedback(0, "crash", f"Error from the ipmininet script : {e}")

finally:
    net.stop()