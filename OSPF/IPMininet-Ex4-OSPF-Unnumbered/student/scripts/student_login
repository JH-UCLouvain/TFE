#!/bin/python3
# Author : Jeremy Holodiline

from ipmininet.iptopo import IPTopo
from ipmininet.ipnet import IPNet
from ipmininet.cli import IPCLI

import sys
sys.path.insert(1, '/course/common/student/')
from ipmininet_exercices import IPMininet_Exercice
ex = IPMininet_Exercice(6)

class MyTopology(IPTopo):

    def build(self, *args, **kwargs):

        r1 = self.addRouter("r1")
        r2 = self.addRouter("r2")
        r3 = self.addRouter("r3")
        r4 = self.addRouter("r4")
        r5 = self.addRouter("r5")

        self.addLink(r1, r2, intfName1=ex.generate_intf_name("r1-r2"), intfName2=ex.generate_intf_name("r2-r1"))
        self.addLink(r2, r3, intfName1=ex.generate_intf_name("r2-r3"), intfName2=ex.generate_intf_name("r3-r2"))
        self.addLink(r2, r4, intfName1=ex.generate_intf_name("r2-r4"), intfName2=ex.generate_intf_name("r4-r2"))
        self.addLink(r2, r5, intfName1=ex.generate_intf_name("r2-r5"), intfName2=ex.generate_intf_name("r5-r2"))

        routers = ["r1","r2","r3","r4","r5"]
        for r in routers:
            mask = 128
            ex.generate_intf_addr(f"{r}-lo", ex.generate_subnet_addr(mask), mask)

        super(MyTopology, self).build(*args, **kwargs)

net = IPNet(topo=MyTopology(), allocate_IPs=False)

try:
    net.start()

    routers = ["r1","r2","r3","r4","r5"]
    for r in routers:
        net[r].cmd(f"vtysh -c 'configure terminal' -c 'interface lo' -c 'ipv6 address {ex.intf_addr[f'{r}-lo']}/128' -c 'exit' -c 'exit' -c 'write memory'")
        net[r].cmd("vtysh -c 'configure terminal' -c 'router ospf6' -c 'interface lo area 0.0.0.0' -c 'exit' -c 'exit' -c 'write memory'")

    IPCLI(net)

    for interface, name in ex.intf_names.items():
        src = interface.split("-")[0]
        lo_addr = ex.intf_addr[f'{src}-lo'] + "/128"
        ex.output_test(src, f"vtysh -c 'show ipv6 ospf6 interface {name}'", "ipv6 ospf6 network point-to-point", f"{name} interface supports point-to-point", f"{name} interface must support point-to-point to be unnumbered", net)
        ex.output_test(src, f"vtysh -c 'show ipv6 ospf6 interface {name}'", f"inet6: {lo_addr}", f"{name} has the correct address", f"{name} must have the same address as the loopback interface", net)

    ex.send_feedback()

except Exception as e:
    ex.send_feedback(0, "crash", f"Error from the ipmininet script : {e}")

finally:
    net.stop()