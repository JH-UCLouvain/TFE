#!/bin/python3
# Author : Jeremy Holodiline

from ipmininet.iptopo import IPTopo
from ipmininet.ipnet import IPNet
from ipmininet.cli import IPCLI

import sys
sys.path.insert(1, '/course/common/student/')
from ipmininet_exercices import IPMininet_Exercice
ex = IPMininet_Exercice(6)

class MyTopology(IPTopo):

    def build(self, *args, **kwargs):

        r1 = self.addRouter("r1")
        r2 = self.addRouter("r2")

        ex.create_link(self, r1, r2, 64)

        super(MyTopology, self).build(*args, **kwargs)

net = IPNet(topo=MyTopology(), allocate_IPs=False)

try:
    net.start()

    IPCLI(net)

    intf = ex.intf_names["r1-r2"]
    ex.output_test(intf.split("-")[0], f"vtysh -c 'show running-config' | awk '/interface {intf}/,/^!/'", f"ipv6 ospf6 hello-interval 7", f"{intf} hello interval is 7 s", f"{intf} hello interval is not 7 s", net)
    intf = ex.intf_names["r2-r1"]
    ex.output_test(intf.split("-")[0], f"vtysh -c 'show running-config' | awk '/interface {intf}/,/^!/'", f"ipv6 ospf6 hello-interval 7", f"{intf} hello interval is 7 s", f"{intf} hello interval is not 7 s", net)
    ex.send_feedback()

except Exception as e:
    ex.send_feedback(0, "crash", f"Error from the ipmininet script : {e}")

finally:
    net.stop()